



안녕하세요~ 이예지입니다. 1차프로젝트 최종 발표를 시작하도록 하겠습니다. 

기억나실지 모르겠지만 저는 동그라미 인형공방 사이트를 제작하였습니다.
동그라미는 홈페이지 없이 트위터, 블로그만을 이용해 고객과 소통하고 있는 업체였는데요. 

그때문에 이것저것 불편한 점이 많은 사이트였습니다.

동그라미 사이트를 제작하기 위해 참고한 멋진 사이트들이 많이 있습니다. 

그중에 메인 페이지의 경우 에버노트를 가장 많이 참고한 것 같습니다. 
제가 생각하는 동그라미 사이트처럼 컨텐츠의 비율이 큰 레이아웃을 가지고 있었고
드롭다운 메뉴에 아이콘을 이용해서 내비게이션을 해주는 점
포인트 컬러를 다채롭게 활용한 디자인 컨셉 등에 주목하였습니다. 

리뉴얼 목표는 달라진 점이 많지는 않고요.
개발 목표가 생겼는데 실제 운영을 목표로 주로 코드 가독성과 재사용성에 중점을 두었습니다. 

그래서 완성한 페이지는 메인페이지, 소개페이지, 제작공정 소개페이지, 사진샘플페이지, 가입, 로그인 페이지
이렇게 6개 페이지를 만들었습니다. 

스토리 보드는 지난 발표에서 디자인을 하다보니 사용성이 떨어지는 것 같아서 헤더 부분을 바꾸었기 때문에
헤더 부분 스토리보드를 새로 추가해주었습니다 

샘플 페이지도 필터를 보여주는 부분이 바뀌어서 새로 스토리 보드를 추가했고요.

가입 화면도 세로 배열로 바꾸었습니다. 

와이어프레임은 원래 디자인을 하기 위해 만드는 것이지만
스토리 보드를 작성하는 김에 와이어프레임도 작성해서 추가해주었습니다. 

각 화면의 전체 모습입니다. 이따가 사이트 동작 시연을 보여드릴 예정이기 때문에
빠르게 넘어가겠습니다. 

스타일 가이드는 바뀐 것이 없습니다. 

디자인 리소스 제작 쪽에서는 개발을 진행하면서 속도 개선을 위해 작은 아이콘, 오브젝트들을 스프라이트 이미지로 작성해서 
이미지 사이즈를 줄여주었습니다. 


개발 관련해서 작업한 내용을 설명드리겠습니다.

HTML에서는 웹표준 검사를 통과하였습니다. 

태그는 작성할 때 HTML5 시멘틱 태그들을 염두에 두고 해당 영역의 의미를 HTML 구조에서 파악할 수 있게 하였습니다.

favicon을 크기별로 넣어주었고요. 크롬 시작 페이지에서도 잘 나오고 있는 화면입니다. 

OG TAG 를 작성해서 넣어주어서 URL 전달 시에 페이지에 관한 정보가 나오도록 하였습니다. 

검색엔진 최적화를 위해 meta 태그를 작성해주었습니다. 

태그는 작성할 때 id 사용은 지양하고 주요 태그는 class로 이름을 넣어주었습니다. 
class는 역할_형용사 형태로 이름을 정해주었습니다. 

태그에서 각 리소스를 임포트 할 때 순서를 정리해서 속도와 동작을 개선해주었습니다. 
첫화면이 빠르게 로딩될 수 있도록 동작은 CSS 뒤에 로드되도록 하였습니다. 
라이브 파일의 경우 어플리케이션 파일보다 앞쪽에 로드해주었습니다. 
어플리케이션 JS는 돔로드가 끝난 바디 마지막에 위치시켜주었습니다. 

폼을 작성할 때 HTML5에서 제공하는 type과 attribute 들을 활용하여서 반영되도록 했습니다. 

소개 페이지 쪽에 Video 가 들어가는데요. 
Video 는 브라우저 호환성을 위해 3가지 타입 이상 제공해주었습니다. 

CSS 측면을 설명드리겠습니다.
CSS 는 편리하게 작성하기 위해 LESS를 주로 활용하였는데요. 
변수, 믹스인, Nesting 기능을 편하게 활용했습니다. 
개인적으로 3.5 버전에서 추가된 Namespace 기능을 써보고 싶었는데요. less 빌드를 자동화해주는 툴에서 지원을 안해줘서 써볼수가 없어서 아쉬웠습니다. 

CSS 최상단에서
변수, 믹스인 기능을 활용해서 스타일가이드에서 정리한 내용들을 미리 잡고 시작해서 이후 코드에서 활용할 수 있게 하였습니다. 

Reset 은 meyerweb 에서 제공한 reset.css 를 이용하였습니다. 

font는 파일크기가 크다보니까 맨 마지막에 로딩되도록 순서를 맞춰주었고.
크로스 브라우징과 속도 개선을 위해 여러 타입을 제공하였습니다. 

이후 동작들은 시연에서 한꺼번에 보여드릴 예정이고요. 

외부 라이브러리로는 Daum Map API, Swiper, Jquery UI 등을 활용하였습니다. 

그럼 이제 홈페이지 시연을 통해 동작을 보여드리겠습니다. 

처음에 홈페이지에 들어오면 보이셨을지 잘 모르겠는데 로고쪽에 선이 생기고 
그다음에 글씨가 나타나는 동작을 CSS 애니메이션을 이용해 구현하였습니다. 
로고에 마우스를 올리는 경우 글씨를 읽는걸 방해하지 않게 하기 위해서 라인이 그려지는 애니메이션만 동작합니다. 

상단 헤더의 경우 JS를 사용하지 않고 CSS 선택자를 이용해서 마우스를 올리면 메뉴가 나타나도록 구현하였습니다. 

이후 원하는 서브 메뉴에 마우스를 올리면 앞에 있는 아이콘이 바뀌어서 어떤 메뉴를 선택하고 있는지 보여주었고요. 

큰 메뉴에 마우스를 올리는 경우 첫 번째 서브메뉴가 자동으로 선택되고, 마우스가 밖으로 나왔다가 다시 들어가면 메뉴가 초기화되도록 하였습니다. 

그리고 서브 메뉴를 사용자가 클릭하러갈 때 마우스 오버한 동작이 빠지지 않게 하기 위해서 
GNB 메뉴의 크기는 우측 끝까지로 잡아주었습니다. 

아래 배너는 Swiper 라이브러리를 활용하여 구현하였습니다. 
각 배너마다 심심하지 않도록 디자인을 조금씩 바꿔주었는데요. 
업체측에서 배너 내용은 개발 요청 없이 수정해서 넣고 싶다는 요청이 있어서 어떻게 해줄지 고민중입니다. 
양 옆의 화살표에 마우스를 올리면 클릭 가능한 부분에 색깔이 살짝 바뀌도록 해서 사용자가 화살표를 클릭하고 싶어할 때 편하게 이용할 수 있도록 하였습니다. 

서브 메뉴 설명드리겠습니다. 
서브메뉴는 사이트에 들어왔을 때 배너 바로 밑에 나오면서 사이트맵을 대신해주는 컨셉입니다. 
이 서브메뉴는 클릭해서 해당 페이지로 바로 들어가는 것이 가능한데요. 딱 봤을 때 사용자가 클릭되는지 알 수 있는 방법이 없습니다. 
그래서 서브메뉴 마우스를 올렸을 때 서브메뉴 전체 색깔을 반전해 주어서 클릭가능여부를 알 수 있게 해주었고
안에 있는 버튼에 마우스를 올리면 한번 더 버튼이 채워지는 애니메이션이 나오게 해서 심심하지 않게 구성해 주었습니다. 

스크롤을 하다가 서브메뉴설명 부분이 사라질 때쯤 되면 서브페이지로 이동할 수 있는 수단이 없습니다. 
그래서 햄버거버튼을 두었고요. 버튼을 누르면 상단에 올라가 있던 헤더가 아래로 내려오고 메뉴를 닫으면 다시 버튼이 나옵니다. 
햄버거버튼한테 일을 시키면 버튼이 상단 헤더를 부르러 갔다가 오는 컨셉으로 둘 다 사라질 때는 위쪽으로 올라가도록 하였습니다. 

아래쪽은 메인 페이지의 본문이라고 할 수 있는 제품 상세설명 페이지인데요. 
사이트 전체적으로 이미지에 마우스를 위에 올리면 이미지가 어두워지면서 상세버튼이 나오는 UX로 통일하였고
뒤의 이미지도 조금 커지게 해서 사용자가 마우스 오버한 사실을 확실하게 알 수 있게 해주었습니다.  

메인 페이지는 스크롤이 조금 긴 편이라서 스크롤할 때 심심하지 않도록 스크롤을 할 때마다 내용들이 나타나도록 해서 사이트가 심심하지 않도록 해주었습니다. 


다음은 소개 페이지입니다. 
처음 페이지에 들어가면 동그라미 공방의 밤 모습을 보게 되고 스크롤을 내리면 공방이 낮이 되도록 하였습니다. 
또한 다음 이미지는 본문 내용에 맞게 인형이 생각한 것을 떠올리는 이미지를 넣어주었고 역시 스크롤이 켜지면 전구에 불이 들어오도록 하였습니다. 

아래는 다음 지도를 이용해서 지도를 넣어준 모습입니다. 

서브메뉴들에도 메인과 동일하게 햄버거버튼이 있는데요. 
서브 페이지들에는 서브 메뉴 상세설명 부분이 없기 때문에 스크롤을 조금 내리기만 하면 햄버거 버튼이 나오도록 해주었고 
각 페이지마다 공통으로 들어가는 동작들은 JS 를 따로 빼서 모듈화를 좀 해주었습니다. 

제작공정 페이지를 설명 드리겠습니다. 

제작공정 페이지는 페이지가 고정되고 스크롤을 내릴 때마다 페이지 내용이 바뀌기만 하는 원페이지 컨셉입니다. 
스크롤과 내용이 바뀌는 것이 동시에 일어나면 조금 산만한 것 같아서
일단 스크롤을 해서 서브 메뉴가 끝난 뒤에 비로소 전체 화면 스크롤이 움직이도록 하였습니다. 
위로 올라갈 때는 먼저 전체 스크롤이 올라가서 페이지가 보인 뒤에 서브 메뉴가 움직입니다. 

다음은 샘플 사진 페이지입니다. 
샘플 사진 페이지의 경우 각 사진들을 볼 수 잇는데 카테고리별로 서브메뉴로 구성은 했지만 실은 같은 페이지를 사용하고 있습니다. 
그래서 클릭해서 들어간 페이지의 모습은 동일하고요. 
서브메뉴를 클릭해서 들어가면 해당 카테고리가 미리 선택되는 컨셉입니다. 

샘플 화면은 처음 들어가면 자동으로 10개 불러오고 
스크롤을 내릴 때마다 10개씩 불러와서 붙여주는 컨셉입니다. 이미지의 크기가 어떤지 모르기 때문에 이미지가 로드된 시점에 더 위쪽에 불러온 사진이 배치되도록 구현하였습니다. 
사용자가 로딩된 것을 알 수 있도록 스피너를 넣어주었습니다. 

마지막은 가입 페이지인데요. 
사용자가 입력 폼에 포커스를 주었을 때 폼 모양이 달라지도록 하였고, 
버튼을 눌렀을 때 유효성 검사를 해서 틀린 부분 폼이 좌우로 흔들려서 어디를 고쳐야 하는지 사용자가 확실하게 알 수 있도록 해주었습니다. 
하나만 고치고 다시 버튼을 눌러도 폼이 흔들리도록 하였습니다.
가입에 성공하면 다시 자동으로 메인 페이지로 돌아가고

로그인 페이지도 사용성은 동일해서 설명은 생략하도록 하겠습니다. 


발표 들어주셔서 감사합니다. 
질문 있으신 분 계신가요?

































     




